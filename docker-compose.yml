version: '3'
services:
  backend:
    build: ./backend
    container_name: ycurve_backend
    # need the sleep to wait for the DB service to get up and running
    command: ["./wait-for-database.sh", "database", "5432", "--", "bundle exec rails s -b 0.0.0.0 -p 3000"]
    entrypoint: ["./backend/scripts/docker-entry.sh"]
    depends_on:
      - database
#    entrypoint: ['./scripts/docker-entry.sh']
    environment:
      - RAILS_ENV=${RAILS_ENV:-development}
      - DATABASE_URL=${DATABASE_URL:-postgres://database:5432}
      - RAILS_SERVE_STATIC_FILES=${RAILS_SERVE_STATIC_FILES}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
    networks:
      - ycurve
    ports:
      - ${RAILS_HTTP_PORT:-80}:3000
    tty: true
    volumes:
      - ./backend:/app

  # See the setup instructions https://hub.docker.com/_/postgres/
  # Database initialized with the command:
  #  $ docker-compose run -e POSTGRES_PASSWORD=<$DB_PASSWORD> database postgres
  #  $ psql -h localhost -p 5444 -U ycurve_development < ./data/postgres_backups/ycurve_development_20180131.sql
  database:
    container_name: ycurve_database
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      DB_DATA_DIR: ${DB_DATA_DIR}
    image: "postgres:9.6.5-alpine"
    networks:
      - ycurve
    ports:
      - "5444:5432"
    volumes:
      - "ycurve_database_postgres965:/var/lib/postgresql/data/"
      - "./data/postgres_backups:/postgres_backups" # Instead write a script to backup the volume now

  frontend:
    build: ./frontend
    #    entrypoint: ['./scripts/docker-entry.sh']
    networks:
      - ycurve
    tty: true
    volumes:
      - ./frontend:/app

  update-daemon:
    build: ./backend
    container_name: ycurve_update_daemon
    command: "bundle exec rake yield_curve_snapshots:run_update_daemon"
    depends_on:
      - database
    environment:
      - RAILS_ENV=${RAILS_ENV:-development}
      - DATABASE_URL=${DATABASE_URL:-postgres://database:5432}
      - RAILS_SERVE_STATIC_FILES=${RAILS_SERVE_STATIC_FILES}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
    networks:
      - ycurve
    tty: true
    volumes:
      - ./log:/app/log
      - ./public/assets:/app/public/assets


networks:
  ycurve:
    external: true

volumes:
  ycurve_database_postgres965:
    # This prevents the volume name from being prepended by the Capistrano release number. Without it
    # data would be stored in /var/lib/docker/volumes/<release_number>_ycurve_database_postgres965, so
    # then the next data deploy will get lost.
    external: true